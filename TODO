
This file contains steps to be taken and features to be added to the program.
    Copyright (C) 2017 Charlie Sale

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    
(Versioning begin at major when package is accepted...)

Phase 1 -- Complete basic Socket I/O functionality. First Release (major version 1.x.x)
---------------------------------------------------------------------------------------
[done] *.  Create a basic TCP socket system based off of C++ I/O
[done] *.  Add more options to make basic_socket more dynamic with getopt/setopt
[done] *.  Add `getpeername()` capabilites to basic_socket
[done] *.  Override formatted output for integer and numbers
[done] *.  Add `getPort()` function
[done] *.  Make socket connect in basic_socket constructor
[done] *.  Add reuseAddress and keepAlive options on server
[done] *   Write exception for constructors (errno already supplied: use default C socket values)
[done] *.  Add texinfo automake build proceedure
[    ] *.  Continuously update texinfo docs

Phase 2 -- Implement security protocols Fourth Major Release (major version 2.x.x)
----------------------------------------------------------------------------------
[    ] *.  Implement Http request/response library
[    ] *.  Add compatibility for other HTTP request/reqpose libraries
[    ] *.  Add compression with zlib
[    ] *.  Add new exceptions
[    ] *.  Implement security protocols
[    ]          *. Options: GNU TLS, GNU SASL, *GSS*
[    ] *.  Add Asynchronous accept method for Server class
[    ] *.  Create an object stream for sending objects


Future -- Implement standard internet protocols
-------------------------------------------------------------------------------------------
NOTE: Must be complient with RFC
[    ] *.  UDP
[    ] *.  TELNET
[    ] *.  FTP
